
/*package edu.utexas.yh7483.tankwar;

import java.awt.*;

public class Missile {
	
	public static final int MISSIILE_RADIUS = 10;
	public static final int X_PACE = 15;
	public static final int Y_PACE = 15;
	
	public static final Color MISSIILE_COLOR = Color.BLACK;
	
	int xpos, ypos;
	Tank.Direction dir;
	private boolean live = true;
	private TankClient tc = null;
	
	public boolean isLive() {
		return live;
	}

	public Missile(int xpos, int ypos, Tank.Direction dir){
		this.xpos = xpos;
		this.ypos = ypos;
		this.dir = dir;
	}
	
	public Missile(int xpos, int ypos, Tank.Direction dir, TankClient tc){
		this(xpos, ypos, dir);
		this.tc = tc;
	}
	
	public void draw(Graphics g) {
		
		Color c = g.getColor();
		g.setColor(MISSIILE_COLOR);
		g.fillOval(xpos, ypos, MISSIILE_RADIUS, MISSIILE_RADIUS);
		g.setColor(c);
		
		move();
	}
	
	public void move() {
		switch(dir) {
		case U: ypos -= Y_PACE; break;
		case D: ypos += Y_PACE; break;
		case L: xpos -= X_PACE; break;
		case R: xpos += X_PACE; break;
		case UL: ypos -= Y_PACE; xpos -= X_PACE; break;
		case UR: ypos -= Y_PACE; xpos += X_PACE; break;
		case DL: ypos += Y_PACE; xpos -= X_PACE; break;
		case DR: ypos += Y_PACE; xpos += X_PACE; break;
		default: break;
		}
		
		if (TankClient.isInBound(xpos, ypos) == false) {
			live = false;
			tc.arrMissile.remove(this);
		}
	}
	
	
	
}
*/





import java.awt.*;

public class Missile {
	public static final int XSPEED = 10;
	public static final int YSPEED = 10;
	
	public static final int WIDTH = 10;
	public static final int HEIGHT = 10;
	
	int x, y;
	Tank.Direction dir;
	
	private boolean live = true;
	
	private TankClient tc;
	
	public Missile(int x, int y, Tank.Direction dir) {
		this.x = x;
		this.y = y;
		this.dir = dir;
	}
	
	public Missile(int x, int y, Tank.Direction dir, TankClient tc) {
		this(x, y, dir);
		this.tc = tc;
	}
	
	public void draw(Graphics g) {
		Color c = g.getColor();
		g.setColor(Color.BLACK);
		g.fillOval(x, y, WIDTH, HEIGHT);
		g.setColor(c);
		
		move();
	}

	private void move() {
		switch(dir) {
		case L:
			x -= XSPEED;
			break;
		case LU:
			x -= XSPEED;
			y -= YSPEED;
			break;
		case U:
			y -= YSPEED;
			break;
		case RU:
			x += XSPEED;
			y -= YSPEED;
			break;
		case R:
			x += XSPEED;
			break;
		case RD:
			x += XSPEED;
			y += YSPEED;
			break;
		case D:
			y += YSPEED;
			break;
		case LD:
			x -= XSPEED;
			y += YSPEED;
			break;
		case STOP:
			break;
		}
		
		if(x < 0 || y < 0 || x > TankClient.GAME_WIDTH || y > TankClient.GAME_HEIGHT) {
			live = false;
			tc.missiles.remove(this);
		}
	}

	public boolean isLive() {
		return live;
	}
	
	
}
